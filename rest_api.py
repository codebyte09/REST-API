# -*- coding: utf-8 -*-
"""REST API.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xyqo5eAQnPoUN5g5AmRMXJe6kVY9AjPV

**Build a REST API with Flask**
"""

from flask import Flask, request, jsonify

app = Flask(__name__)

users = {}
user_id_counter = 1

@app.route('/users', methods=['GET'])
def get_users():
    return jsonify(list(users.values()))

@app.route('/users/<int:user_id>', methods=['GET'])
def get_user(user_id):
    user = users.get(user_id)
    if user:
        return jsonify(user)
    return jsonify({"error": "User not found"}), 404

@app.route('/users', methods=['POST'])
def create_user():
    global user_id_counter
    data = request.json
    if not data or 'name' not in data:
        return jsonify({"error": "Name is required"}), 400

    user = {
        "id": user_id_counter,
        "name": data['name'],
        "email": data.get('email')
    }
    users[user_id_counter] = user
    user_id_counter += 1
    return jsonify(user), 201

@app.route('/users/<int:user_id>', methods=['PUT'])
def update_user(user_id):
    user = users.get(user_id)
    if not user:
        return jsonify({"error": "User not found"}), 404

    data = request.json
    if not data:
        return jsonify({"error": "No data provided for update"}), 400

    if 'name' in data:
        user['name'] = data['name']
    if 'email' in data:
        user['email'] = data['email']

    users[user_id] = user # Update in dictionary
    return jsonify(user)

@app.route('/users/<int:user_id>', methods=['DELETE'])
def delete_user(user_id):
    if user_id in users:
        del users[user_id]
        return jsonify({"message": "User deleted successfully"}), 204
    return jsonify({"error": "User not found"}), 404

if __name__ == '__main__':
    app.run(debug=True)